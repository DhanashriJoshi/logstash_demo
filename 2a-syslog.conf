########### server config ##############
input {
  syslog {
    port => 5055
    syslog_field => "syslog"
    type => "syslog"
  }
}


filter {
  if [type] == "syslog" {
    grok {
      # match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:[%{POSINT:syslog_pid}])?: %{GREEDYDATA:syslog_message}" }
      #match => { "message" => "<[0-9]*>%{%{GREEDYDATA}" }
      match => ["message", "<%{INT}>%{SYSLOGTIMESTAMP:timestamp} %{GREEDYDATA:message}"]
      overwrite => ["message"]
      remove_field => ["tags"]
    }
    mutate {
      add_field => ["version", "%{@version}"]
      remove_field => ["@version", "priority", "severity", "facility_label", "facility", "severity_label", "host", "@timestamp"]
    }
  }
}

output {
  kafka {
    topic_id => "test"
    bootstrap_servers => "127.0.0.1:9092" #"172.21.31.236:9092"
    key_serializer => "org.apache.kafka.common.serialization.StringSerializer"
    value_serializer => "org.apache.kafka.common.serialization.ByteArraySerializer"
    codec => protobuf {
      class_name => "com.iac.soc.backend.schemas.Log"
      include_path => ['/home/bhavesh/Desktop/Schemas_pb.rb']
      protobuf_root_directory => '/home/bhavesh/Desktop'
      protobuf_version => 3
    }
  }
  stdout { codec => rubydebug }
}


######### client config ############
sudo nano /etc /rsyslog.conf
*.* @@LOGSTASH_OR_SYSLOGSERVERS_IP:PORT
*.* @@172.21.31.236:5055